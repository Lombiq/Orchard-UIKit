@model ShowcaseViewModel

@{
    var dropDownData = new List<DropDownItem>
{
        new DropDownItem(){ Text = T["Email Verified"], DataState = true, DataClass = "btn-success"},
        new DropDownItem(){ Text = T["Email Not Verified"], DataState = false, DataClass = "btn-danger"},
    };
}

<div style="background:white; overflow: auto; display: flex;align-items: flex-start;justify-content: center;">
    <div style="width:30%; padding: 1.5em; float:left;">

        <h1>@T["Textbox:"]</h1>

        <h4>@T["No label, required."]</h4>
        <editor type="TextBox"
                model-for="@Model.RequiredStringEmpty"
                labelPosition="@LabelPosition.None"
                placeholder="@T["Email"]" />

        <h4>@T["No label, not required."]</h4>
        <editor type="TextBox"
                model-for="@Model.NotRequiredStringEmpty"
                labelPosition="@LabelPosition.None"
                placeholder="@T["Email"]" />

        <h4>@T["Label top, required."]</h4>
        <editor type="TextBox"
                model-for="@Model.RequiredStringEmpty"
                label="@T["Email"]"
                labelPosition="@LabelPosition.Top"
                placeholder="@T["Email"]" />

        <h4>@T["Label top, not required."]</h4>
        <editor type="TextBox"
                model-for="@Model.NotRequiredStringEmpty"
                label="@T["Email"]"
                labelPosition="@LabelPosition.Top"
                placeholder="@T["Email"]" />

        <h4>@T["Label on border, required."]</h4>
        <editor type="TextBox"
                model-for="@Model.RequiredStringEmpty"
                label="@T["Email"]"
                labelPosition="@LabelPosition.Border"
                placeholder="@T["Email"]" />

        <h4>@T["Label on border, not required."]</h4>
        <editor type="TextBox"
                model-for="@Model.NotRequiredStringEmpty"
                label="@T["Email"]"
                labelPosition="@LabelPosition.Border"
                placeholder="@T["Email"]" />
    </div>
    <div style="width:30%; padding: 1.5em; float:left">

        <h1>@T["Checkbox:"]</h1>

        <h4>@T["Label on right"]</h4>
        <editor Type="CheckBox"
                model-for="@Model.CheckboxFalse"
                label="@T["Checkbox default false"]"
                labelPosition="@LabelPosition.Right" />

        <h4>@T["Label on left"]</h4>
        <editor Type="CheckBox"
                model-for="@Model.CheckboxTrue"
                label="@T["Checkbox default true"]"
                labelPosition="@LabelPosition.Left" />
    </div>
    <div style="width:30%; padding: 1.5em; float:left">
        <h1>@T["Bootstrap dropdown:"]</h1>

        <h4>@T["Hide selected from list"]</h4>
        <editor type="DropDown"
                model-for="@Model.CheckboxFalse"
                DropDownContainerId="downContainerId2"
                ButtonContainerId="buttonContainerId2"
                ButtonId="buttonId2"
                DropDownData="@dropDownData"
                Label="@T["Dropdown 1"]"
                HideSelectedFromDropDownList="true" />

        <h4>@T["Don't hide selected from list"]</h4>
        <editor type="DropDown"
                model-for="@Model.CheckboxTrue"
                DropDownContainerId="downContainerId1"
                ButtonContainerId="buttonContainerId1"
                ButtonId="buttonId1"
                Label="@T["Dropdown 2"]"
                DropDownData="@dropDownData" />
    </div>
</div>
