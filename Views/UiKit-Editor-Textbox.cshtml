@inject IHtmlGenerator HtmlGenerator

@{
    const string DefaultBlockName = "textBoxEditor";
    var blockClassName = Model.BlockClassName ?? DefaultBlockName;
    var placeholderClass = $"{DefaultBlockName}__placeholder";
    var placeholderLabelClass = $"{DefaultBlockName}__placeholderLabel";


    var forModel = Model.For as ModelExpression;

    var labelAttributes = new Dictionary<string, object>
    {
        ["class"] = $"{blockClassName}__label"
    };

    var inputAttributes = new Dictionary<string, object>
    {
        ["class"] = $"form-control {blockClassName}__input"
    };

    var isRequired = forModel.Metadata.RequiredAttrExists();
    if (isRequired)
    {
        inputAttributes["required"] = string.Empty;
        inputAttributes["class"] = inputAttributes["class"] + " required";
        labelAttributes["class"] = labelAttributes["class"] + " required";
    }

    if (Model.Disabled == true)
    {
        inputAttributes["disabled"] = string.Empty;
    }

    var labelPositionModifier = Model.LabelPosition switch
    {
        LabelPosition.Border => "__label_border",
        LabelPosition.Top => "__label_top",
        LabelPosition.None => "__label_none",
        _ => "__label_top",
    };

    labelAttributes["class"] = labelAttributes["class"] + $" {DefaultBlockName}{labelPositionModifier}" +
            $" {blockClassName}{labelPositionModifier}";


    if (labelPositionModifier == "__label_none")
    {
        labelAttributes["class"] = labelAttributes["class"] + $" {placeholderLabelClass}";
    }

    var hasAsterixInPlaceholder = Model.LabelPosition == LabelPosition.None && isRequired;

    var placeholder = Model.Placeholder as string;
    if (!string.IsNullOrEmpty(placeholder) && !hasAsterixInPlaceholder)
    {
        inputAttributes["placeholder"] = placeholder;
    }

    var blockId = string.IsNullOrEmpty(Model.BlockId) ? string.Empty : $"id={Model.BlockId}";

    var label = HtmlGenerator.GenerateLabel(
        Model.ViewContext,
        forModel.ModelExplorer,
        forModel.Name,
        hasAsterixInPlaceholder
            ? placeholder
            : Model.Label as string,
        labelAttributes);

    var input = HtmlGenerator.GenerateTextBox(
        Model.ViewContext,
        forModel.ModelExplorer,
        forModel.Name,
        forModel.Model,
        string.Empty,
        inputAttributes);

}

<div @blockId class="form-group @blockClassName @Model.Class">

    @if (hasAsterixInPlaceholder)
    {
        <div class="@(blockClassName)__placeholder">
            @label
            <span class="@(blockClassName)__asterisk star">*</span>
        </div>
    }
    else
    {
        @label
    }

    @input

    @if (!string.IsNullOrEmpty(Model.Hint))
    {
        <div class="hint @(blockClassName)__hint">@Model.Hint</div>
    }
</div>
