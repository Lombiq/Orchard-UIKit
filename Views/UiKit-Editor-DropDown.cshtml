@using Lombiq.UIKit.Models
@using Microsoft.AspNetCore.Mvc.Localization

@inject IHtmlGenerator HtmlGenerator

@{
    var DefaultBlockName = "dropDownEditor";
    var blockClassName = Model.BlockClassName ?? DefaultBlockName;

    var forModel = Model.For as ModelExpression;

    var inputAttributes = new Dictionary<string, object>
    {
        ["type"] = "hidden",
        ["required"] = "",
        ["class"] = "",
    };

    var labelAttributes = new Dictionary<string, object>
    {
        ["class"] = $"{DefaultBlockName}__label"
    };

    if (Model.Disabled == true)
    {
        inputAttributes["disabled"] = "";
    }

    var isRequired = forModel.Metadata.RequiredAttrExists();
    if (isRequired)
    {
        inputAttributes["class"] = $" {DefaultBlockName}__label_required {blockClassName}__label_required";
        labelAttributes["class"] = labelAttributes["class"]
            + $" {DefaultBlockName}__label_required {blockClassName}__label_required";
    }

    var label = Model.Label != null
        ? HtmlGenerator.GenerateLabel(
            Model.ViewContext,
            forModel.ModelExplorer,
            forModel.Name,
            (Model.Label as LocalizedHtmlString)?.Value,
            labelAttributes)
        : null;

    var input = HtmlGenerator.GenerateTextBox(
        Model.ViewContext,
        forModel.ModelExplorer,
        forModel.Name,
        forModel.Model,
        string.Empty,
        inputAttributes);

    var dropDownDatas = Model.DropDownData as List<DropDownItem>;

    var defaultData = dropDownDatas.FirstOrDefault(data => data.DataState.Equals(forModel.Model));

    var disabled = (Model.Disabled != null && Model.Disabled) ? "disabled" : string.Empty;
}

<style asp-src="~/Lombiq.UIKit/css/dropDown.min.css" debug-src="~/Lombiq.UIKit/css/dropDown.css"></style>

<div id="@Model.DropDownContainerId" class="@blockClassName @DefaultBlockName">
    @label
    @input
    <nav>
        <div asp-validation-class-for="@forModel">
            <div id="@Model.ButtonContainerId" class="dropDown__ButtonContainer">
                <button id="@Model.ButtonId"
                        title="@forModel.Model" @(disabled)
                        class="btn btn-sm @defaultData.DataClass dropdown-toggle @(DefaultBlockName)__button @(blockClassName)__button"
                        type="button"
                        data-toggle="dropdown"
                        aria-haspopup="true"
                        aria-expanded="false">
                    @defaultData.Text
                    </button>
                    <div class="dropdown-menu dropDown__itemContainer">
                        @foreach (var dropDownItem in dropDownDatas)
                        {
                            <a href="javascript:void(0)"
                               data-state="@dropDownItem.DataState"
                               data-state-text="@dropDownItem.Text"
                               data-class="@dropDownItem.DataClass"
                               class="dropdown-item dropDown__item">@dropDownItem.Text</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </div>

    <script asp-src="~/Lombiq.UIKit/js/dropDownEditor.js" at="Foot" depends-on="jQuery"></script>
    <script at="Foot">
(function ($) {
    $(function () {
        @if ((bool?)Model.HideSelectedFromDropDownList == true)
        {
            @:removeSelectedFromDropDown(@Json.Serialize(Model.ButtonId));
        }

        dropdownOnClick(@Json.Serialize(Model.ButtonContainerId), @Json.Serialize(Model.ButtonId), @Json.Serialize((Html.IdFor(m => forModel.Model))), @Json.Serialize(Model.HideSelectedFromDropDownList));
    });
})(jQuery);
    </script>
